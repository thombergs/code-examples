openapi: 3.0.2
info:
  title: Convertlab Message Service
  description: "For customer to send message to its clients using asigned message service supplier"
  contact:
    email: young.xu@convertlab.com
  version: v1
externalDocs:
  description: Find out more about Reflectoring
  url: https://www.convertlab.com/
servers:
  # Added by API Auto Mocking Plugin
  - description: API Auto Mocking
    url: http://localhost:8090/sms
tags:
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://localhost:8090/sms
  - name: template
    description: Operations about message template
    externalDocs:
      description: save message template
      url: http://localhost:8090/sms
  - name: message
    description: Operations about message
    externalDocs:
      description: sending/reporting message
      url: http://localhost:8090/sms
  - name: messageReport
    description: Operations about message report
    externalDocs:
      description: save/update message report
      url: http://localhost:8090/sms
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: Create user functionality
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
          content: {}
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid user supplied
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        201:
          description: operation successful
          content: {}
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: User not found
          content: {}
  /template:
    post:
      tags:
        - template
      summary: save template
      description: This can only be done by the logged in user.
      operationId: saveMessageTemplate
      requestBody:
        description: Saved MessageTemplate Object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MessageTemplate'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid template supplied
          content: {}
        401:
          description: unauthorized request
          content: {}
      x-codegen-request-body-name: body
  /send:
    post:
      tags:
        - message
      summary: Send Single Message
      description: This can only be done by the logged in user.
      operationId: sendSingleMessage
      parameters:
        - name: messageParams
          in: query
          description: tenantId, etc.,
          required: true
          schema:
            $ref: '#/components/schemas/MessageParameters'
      requestBody:
        description: Sent Message
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SingleMessage'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid message or parameter(s) supplied
          content: {}
        401:
          description: unauthorized request
          content: {}
      x-codegen-request-body-name: body
  /batch:
    post:
      tags:
        - message
      summary: Send Batch Message
      description: This can only be done by the logged in user.
      operationId: sendBatchMessage
      parameters:
        - name: messageParams
          in: query
          description: tenantId, etc.,
          required: true
          schema:
            $ref: '#/components/schemas/MessageParameters'
      requestBody:
        description: Sent Batch Message
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/BatchMessage'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid Batch messages or parameter(s) supplied
          content: {}
        401:
          description: unauthorized request
          content: {}
      x-codegen-request-body-name: body
  /sxt/sendReport:
    post:
      tags:
        - messageReport
      summary: Send Message Report
      description: This can only be done by the logged in user.
      operationId: sendMessageReport
      parameters:
        - name: msg
          in: query
          description: msgreport
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid report message
          content: {}
        401:
          description: unauthorized request
          content: {}
      x-codegen-request-body-name: body
  /sxt/reply:
    post:
      tags:
        - messageReport
      summary: Reply Message Sending Request
      description: This can only be done by the logged in user.
      operationId: receiveMessageReply
      parameters:
        - name: msg
          in: query
          description: msgreceive
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid report message
          content: {}
        401:
          description: unauthorized request
          content: {}
      x-codegen-request-body-name: body

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
          maximum: 10
          minimum: 2
    MessageBase:
      type: object
      properties:
        tenantId:
          type: integer
          format: int64
          description: Tenant ID
        templateId:
          type: integer
          format: int64
          description: Text Message id from DM Hub(not null)
          nullable: false
        templateText:
          type: string
          description: Template content
        batchId:
          type: string
          nullable: false
          description: batch id
        audienceIdType:
          type: string
          description: message reciever's phone number type
        channelAccount:
          type: string
          description: Messae service supplier
        uniq:
          type: string
          description: customerized variable, prevent duplicate message sending out
    MessageTemplate:
      type: object
      properties:
        tenantId:
          type: integer
          format: int64
          description: Tenant ID
        templateId:
          type: integer
          format: int64
          description: Text Message id from DM Hub(not null)
          nullable: false
        templateContent:
          type: string
          description: Template content
          nullable: false
        smsType:
          type: string
          nullable: false
          description: message genre
          default: notification/marketing
        signature:
          type: string
          description: message signature
          default: 【】
        templateName:
          type: string
          description: Template Title
    MessageReport:
      type: object
      properties:
        tenantId:
          type: integer
          format: int64
          description: Tenant ID
        templateId:
          type: integer
          format: int64
          description: Text Message id from DM Hub
        oldBatchId:
          type: string
          description: previous batch id
        newBatchId:
          type: string
          description: previous batch id
        mobile:
          type: string
          description: mobile phone number
        content:
          type: string
          description: message content
        subAccount:
          type: string
          description: sub Account
          default: 【】
        sendDateStr:
          type: string
          description: date (string) when message sent
        receiveFlag:
          type: string
          description: message recieve status
        sendRespCode:
          type: string
          description: reponsed message for sent message
        sendRespMsg:
          type: string
          description: reponsed content for sent message
        uniq:
          type: string
          description: customerized variable, prevent duplicate message sending out
    MessageParameters:
      type: object
      properties:
        tenantId:
          type: integer
          format: int64
          description: Tenant ID
        templateId:
          type: integer
          format: int64
          description: Text Message id from DM Hub(not null)
          nullable: false
        templateContent:
          type: string
          description: Template content
          nullable: false
        smsType:
          type: string
          nullable: false
          description: message genre
          default: notification/marketing
        signature:
          type: string
          description: message signature
          default: 【】
        templateName:
          type: string
          description: Template Title
    MessageData:
      type: object
      additionalProperties:
        type: object
    SingleMessage:
      allOf:
        - $ref: '#/components/schemas/MessageBase'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/MessageData'
              nullable: false
    BatchMessage:
      allOf:
        - $ref: '#/components/schemas/MessageBase'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/MessageData'
              minItems: 1
    VerificationCode:
      type: object
      properties:
        mobile:
          type: string
          default: 133****1234
          description: mobile phone number
        code:
          type: string
          description: verification code
  securitySchemes:
    reflectoring_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://reflectoring.swagger.io/oauth/dialog
          scopes:
            write:users: modify users
            read:users: read users
    api_key:
      type: apiKey
      name: api_key
      in: header